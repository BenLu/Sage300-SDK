@*
    The MIT License (MIT)
    Copyright (c) 1994-2020 The Sage Group plc or its licensors.  All rights reserved.

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to use,
    copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
    Software, and to permit persons to whom the Software is furnished to do so,
    subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
    CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*@

@model ValuedPartner.TU.Web.Areas.TU.Models.ReceiptViewModel
@using Sage.CA.SBS.ERP.Sage300.Common.Models
@using Sage.CA.SBS.ERP.Sage300.Common.Models.Enums
@using Sage.CA.SBS.ERP.Sage300.Common.Web.HtmlHelperExtension
@using CommonResx = Sage.CA.SBS.ERP.Sage300.Common.Resources.CommonResx
@using ReceiptResx = ValuedPartner.TU.Resources.Forms.ReceiptHeaderResx
@using Sage.CA.SBS.ERP.Sage300.Common.Web.AreaConstants
@using ValuedPartner.TU.Web.Areas.TU.Constants

<script type="text/javascript">
        var receiptUserPreferences = {
            receiptDetailGrid: '@Html.GridPreference("53538E45-3265-4BA3-B5B2-CD0582ADEF99")',
        }
        @Html.ConvertToJsVariableUsingNewtonSoft("receiptViewModel", Model)
</script>

<div>
    @Html.ValidationSummary(true)
</div>
<div id="success" class="message"></div>

<div class="form-screen">
    <div id="message"></div>

    <script type="text/javascript">
        @{
                bool poUpdateRights = false;
                poUpdateRights = Model.UserAccess.SecurityType.HasFlag(SecurityType.Modify);
                @Html.ConvertToJsVariableUsingNewtonSoft("poUpdateRights", poUpdateRights);
            }
    </script>

    <header>
        <section class="header-group-1">
            <div class="header-wrapper">
                <div class="header-headline">
                    @Html.SageHeader1Label("receiptHeader", ValuedPartner.TU.Resources.Forms.ReceiptDetailResx.Entity)
                </div>
                @{
                    var import = Model.UserAccess.SecurityType.HasFlag(SecurityType.Import);
                    var export = Model.UserAccess.SecurityType.HasFlag(SecurityType.Export);
                    var customize = Model.UserAccess.SecurityType.HasFlag(SecurityType.Admin);
                }
                @Html.Partial(Core.OptionsMenu, Model.UserAccess)
                <div class="header-options">
                    @if (Model.UserAccess.SecurityType.HasFlag(SecurityType.Modify))
                    {
                        @Html.KoSageButton("btnNewReceipt", new { @sagedisable = "DisableScreen" }, new { @value = CommonResx.CreateNew, @id = "btnNewReceipt", @class = "btn btn-primary" })
                    }
                </div>
            </div>
        </section>
    </header>
    <div class="form-group">
        <div class="search-group">
            @Html.SgFinderFor(m => m.Data.ReceiptNumber,
                  new { @sagevalue = "Data.ReceiptNumber" },
                  new { @maxlength = "16", @class = "txt-upper", @id = "txtReceiptNumber" }, size: "medium",
                  goButtonId: "btnReceiptNumber", findButtonId: "btnReceiptNumberFinder",
                  labelText: ReceiptResx.ReceiptNumber, labelHtmlAttrs: new { @id = "lblReceiptNumber" })
        </div>
        <div class="input-group">
            @Html.SageLabel("lblDescription", "Receipt Description")
            @Html.KoSageTextBox("txtDescription", new { @value = "Data.Description", @sagedisable = "IsDisableOnlyComplete" }, new { @id = "txtDescription", @class = "medium-large", @maxlength = "60" })
        </div>
        <div class="input-group">
            @Html.SgTextFor(m => m.Data.EnteredBy,
                  new { @value = "Data.EnteredBy" }, new { @disabled = "disabled" }, size: "small",
                  labelText: ReceiptResx.EnteredBy, labelHtmlAttrs: new { @id = "lblEnteredBy" },
                  includeValidation: false)
        </div>
    </div>

    <div class="form-group">
        <div class="dropdown-group" data-bind="visible:IsVisibleOnMode">
            @Html.SgDropdownFor(m => m.Data.ReceiptType,
                  new { @value = "Data.ReceiptType" },
                  labelHtmlAttrs: new { @visible = "IsVisibleOnMode" },
                  labelText: "Type", selectList: Model.ReceiptType)
        </div>
        <div class="input-group">
            @Html.SageLabel("lblPONumber", "PONumber")
            @Html.KoSageTextBox("txtPONumber", new { @value = "Data.PurchaseOrderNumber", @sagedisable = "Data.isControlsDisabledOnReadMode" }, new { @class = "txt-upper default", @maxlength = "22" })
        </div>
        <div class="input-group">
            @Html.SageLabel("lblReference", ReceiptResx.Reference)
            @Html.KoSageTextBox("txtReference", new { @value = "Data.Reference", @sagedisable = "Data.isControlsDisabledOnReadMode" }, new { @class = "large", @maxlength = "60" })
        </div>
    </div>

    <div class="form-group">
        <div class="datepicker-group">
            @Html.SgDatepickerFor(m => m.Data.ReceiptDate,
                  new { @sageDatePicker = "Data.ReceiptDate", @sagedisable = "IsDisableOnlyComplete" },
                  new { @id = "txtReceiptDate" }, size: "small",
                  labelText: ReceiptResx.ReceiptDate, labelHtmlAttrs: new { @id = "lblReceiptDate" },
                  includeValidation: false)
        </div>
        <div class="datepicker-group">
            @Html.SgDatepickerFor(m => m.Data.PostingDate,
                  new { @sageDatePicker = "Data.PostingDate", @sagedisable = "IsDisableOnlyComplete" },
                  new { @id = "txtPostingDate" }, size: "small",
                  labelText: ReceiptResx.PostingDate, labelHtmlAttrs: new { @id = "lblPostingDate" },
                  includeValidation: false)
        </div>
        <div class="input-group">
            @Html.SageLabel("lblYearPeriod", "Year/Period")
            @Html.KoSageTextBox("txtYearPeriod", new { @value = "Data.ComputedYearPeriod" }, new { @disabled = "disabled", @tabindex = -1, @class = "small" })
        </div>
        <div class="ctrl-group">
            <div>
                @Html.SgCheckboxFor(m => m.Data.IsRequireLabel,
                      new { @sagechecked = "IsRequireChecked", @sagedisable = "IsPosted" }, new { @id = "chkRequireLabel" },
                      labelText: ReceiptResx.RequireLabels,
                      labelHtmlAttrs: new { @sagedisable = "IsPosted" })
            </div>
            <div>
                @Html.SgCheckboxFor(m => m.Data.IsOptionalFields,
                      new { @sagechecked = "IsOptionalFields", @sagedisable = "IsPosted" }, 
                      new { @id = "chkIsOptionalFields", @disabled = "disabled" },
                      labelText: CommonResx.OptionalFields,
                      labelDataAttrs: new { @sagedisable = "true" })
                @Html.SageHamburger("#", null, null, new { @id = "lnkOptionalField" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="search-group">
            @Html.SgFinderFor(m => m.Data.VendorNumber,
                  new { @sagevalue = "Data.VendorNumber", @sagedisable = "Data.isControlsDisabledOnReadMode" },
                  new { @maxlength = "12", @class = "txt-upper" }, size: "small",
                  goButtonId: "btnVendorNumber", findButtonId: "btnVendorNumberFinder",
                  buttonDataAttrs: new { @value = "Data.VendorNumber", @sagedisable = "Data.isControlsDisabledOnReadMode" },
                  labelText: ReceiptResx.VendorNumber, labelHtmlAttrs: new { @id = "lblVendorNumber" },
                  includeValidation: false)
        </div>
        <div class="input-group">
            @Html.SageLabel("lblVendorName", "VendorDescription")
            @Html.KoSageTextBox("txtVendorName", new { @value = "Data.VendorShortName" }, new { @disabled = "disabled", @tabindex = -1, @class = "large" })
        </div>
    </div>

    <div class="form-group" data-bind="visible:IsMulticurrency">
        <div class="search-group">
            @Html.SgFinderFor(m => m.Data.ReceiptCurrency,
                  new { @sagevalue = "Data.ReceiptCurrency", @sagedisable = "IsDisableRecCurr", @visible = "IsMulticurrency" },
                  new { @maxlength = "3", @class = "txt-upper", @formatTextbox = "alphaNumeric" }, size: "smaller",
                  goButtonId: "btnReceiptCurrency", findButtonId: "btnReceiptCurrencyFinder",
                  buttonDataAttrs: new { @value = "Data.ReceiptCurrency", @visible = "IsMulticurrency", @sagedisable = "IsDisableRecCurr" },
                  labelText: ReceiptResx.ReceiptCurrency, labelHtmlAttrs: new { @visible = "IsMulticurrency" },
                  includeValidation: false)
        </div>
        <div class="input-group">
            @Html.KoSageLabelFor(model => model.Data.ReceiptCurrency, "Receipt Currency Description", new { @visible = "IsMulticurrency" })
            @Html.KoSageTextBox("txtReceiptCurrencyDescription", new { @value = "ReceiptCurrencyDescription", @visible = "IsMulticurrency" }, new { @maxlength = "60", @disabled = "disabled", @tabindex = -1, @class = "large" })
        </div>
    </div>
    <div class="form-group" data-bind="visible:IsMulticurrency">
        <div class="input-group">
            @Html.SageLabelForWithHamburger(model => model.Data.ExchangeRate, new { @class = "" }, "#", null, null, new { @id = "lnkExchangeRateThree" })
            @*@Html.KoSageLabelFor(model => model.Data.ExchangeRate, ReceiptResx.ExchangeRate, new { @visible = "IsMulticurrency" })*@
            @*@Html.SageHamburger("#", null, null, new { @id = "lnkExchangeRateThree" })*@
            @Html.KoSageNumericBoxFor(model => model.Data.ExchangeRate, new { @sagevalue = "Data.ExchangeRate", @valueUpdate = "'input'", @sagedisable = "IsFuncCurrency" }, new { @maxlength = "16", @class = "default numeric" })
        </div>
        <div class="search-group">
            @Html.SgFinderFor(m => m.Data.AdditionalCostCurrency,
                  new { @sagevalue = "Data.AdditionalCostCurrency", @sagedisable = "Data.isControlsDisabledOnReadMode", @visible = "IsMulticurrency" },
                  new { @maxlength = "3", @class = "txt-upper", @formatTextbox = "alphaNumeric" }, size: "smaller",
                  goButtonId: "btnAddlCostCurrency", findButtonId: "btnAddlCostCurrencyFinder",
                  buttonDataAttrs: new { @value = "Data.AdditionalCostCurrency", @visible = "IsMulticurrency", @sagedisable = "Data.isControlsDisabledOnReadMode" },
                  labelText: ReceiptResx.AdditionalCostCurrency, labelHtmlAttrs: new { @visible = "IsMulticurrency" },
                  includeValidation: false)
        </div>
        <div class="input-group">
            @Html.KoSageLabelFor(model => model.Data.AdditionalCostCurrency, "Additional Cost Currency Description", new { @visible = "IsMulticurrency" })
            @Html.KoSageTextBox("txtAddlCostCurrencyDescription", new { @value = "AddlCostCurrencyDescription", @visible = "IsMulticurrency", }, new { @disabled = "disabled", @tabindex = -1, @class = "default" })
        </div>
        <div class="dropdown-group" data-bind="visible:IsVisibleAllocType">
            @Html.SgDropdownFor(m => m.Data.AdditionalCostAllocationType,
                  new { @value = "Data.AdditionalCostAllocationType", @sagedisable = "Data.isControlsDisabledOnReadMode" },
                  labelHtmlAttrs: new { @visible = "IsVisibleAllocType" },
                  labelText: ReceiptResx.AdditionalCost, selectList: Model.AdditionalCostAllocationType)
        </div>
        <div class="input-group">
            @Html.KoSageLabelFor(model => model.Data.AdditionalCost, ReceiptResx.AdditionalCost, new { @sagedisable = "disableAdditionalCost" })
            @Html.KoSageNumericBox("txtAddlCost", new { @sagevalue = "Data.AdditionalCost", @valueUpdate = "'input'", @sagedisable = "disableAdditionalCost" }, new { @class = "default align-right kendonumeric" })
        </div>
    </div>

    <div class="form-group">
        <div class="input-group" data-bind="visible: Data.IsTotalCostReceiptAdditional">
            @Html.KoSageLabelFor(model => model.Data.TotalReturnCost, ReceiptResx.TotalCost, new { @text = "lblTotalCost" })
            @Html.KoSageNumericBox("txtTotalCost", new { @valueUpdate = "'input'", @sagevalue = "Data.TotalCostReceiptAdditional" }, new { @disabled = "disabled", @tabindex = -1, @class = "default align-right kendonumeric" })
        </div>
        <div class="input-group" data-bind="visible: Data.IsTotalReturnCost">
            @Html.KoSageLabelFor(model => model.Data.TotalReturnCost, ReceiptResx.TotalCost, new { @text = "lblTotalCost" })
            @Html.KoSageNumericBox("txtTotalReturnCost", new { @valueUpdate = "'input'", @sagevalue = "Data.TotalReturnCost" }, new { @disabled = "disabled", @tabindex = -1, @class = "default align-right kendonumeric" })
        </div>
        <div class="input-group" data-bind="visible: Data.IsTotalAdjustmentCost">
            @Html.KoSageLabelFor(model => model.Data.TotalReturnCost, ReceiptResx.TotalCost, new { @text = "lblTotalCost" })
            @Html.KoSageNumericBox("txtTotalAdjustmentCost", new { @valueUpdate = "'input'", @sagevalue = "Data.TotalAdjCostReceiptAddl" }, new { @disabled = "disabled", @tabindex = -1, @class = "default align-right kendonumeric" })
        </div>
        <div class="input-group">
            @Html.KoSageLabelFor(model => model.TotalCostCurrency, ReceiptResx.Currency, new { @visible = "IsMulticurrency" })
            @Html.KoSageTextBox("txtTotalCostCurrency", new { @sagevalue = "TotalExtendedCostCurrency", @valueUpdate = "'input'", @visible = "IsMulticurrency" }, new { @disabled = "disabled", @tabindex = -1, @class = "smaller" })
        </div>
        <div class="input-group" data-bind="visible:IsMultiCurrAndReturn">
            @Html.KoSageLabelFor(model => model.Data.TotalExtendedCostSource, "Total Extended Cost", new { })
            @Html.KoSageNumericBox("txtTotalExtendedCost", new { @value = "Data.TotalExtendedCostSource", @sagevalue = "TotalExtendedCost", @valueUpdate = "'input'" }, new { @disabled = "disabled", @tabindex = -1, @class = "default align-right" })
        </div>
        <div class="input-group" data-bind="visible:IsMultiCurrAndReturn">
            @Html.KoSageLabelFor(model => model.ExtendedCostCurrency, ReceiptResx.Currency, new { })
            @Html.KoSageTextBox("txtExtendedCostCurrency", new { @sagevalue = "Data.ReceiptCurrency", @valueUpdate = "'input'" }, new { @disabled = "disabled", @tabindex = -1, @class = "smaller" })
        </div>
        <div class="buttons-group no-label">
            @Html.KoSageButton("btnRefresh", new { @sagedisable = "IsDisableOnlyComplete" }, new { @class = "btn btn-secondary", @id = "btnRefresh", @value = CommonResx.Refresh })
        </div>
    </div>

    @Html.SageGrid("receiptGrid", (GridDefinition)@ViewBag.ReceiptDetailGrid)

    <div id="optionalField" style="display: none;">
        @*@Html.Partial(InventoryControl.ReceiptOptionalFields, new Sage.CA.SBS.ERP.Sage300.IC.Models.ReceiptOptionalField())*@
        @Html.SageGrid("rptOptionalFieldGrid", (GridDefinition)@ViewBag.RptOptionalFieldGrid)
    </div>
    <div id="detailOptionalField" style="display: none;">
        @* @Html.Partial(InventoryControl.ReceiptDetailOptionalFields, new Sage.CA.SBS.ERP.Sage300.IC.Models.ReceiptDetailOptionalField())*@
        @Html.SageGrid("rptDetailOptionalFieldGrid", (GridDefinition)@ViewBag.RptDetailOptionalFieldGrid)
    </div>
    <div id="" style="display: none;">
        @Html.Partial(Constants.ReceiptExchangeRateViewPath)
    </div>
    <section class="footer-group-1">
        @if (Model.UserAccess.SecurityType.HasFlag(SecurityType.Modify))
        {
            @Html.KoSageButton("Delete", new { @sagedisable = "IsDisableDelBtn" }, new { @class = "btn btn-primary", @value = CommonResx.Delete, @id = "btnDelete" })
            @Html.KoSageButton("Post", new { @sagedisable = "IsDisablePostBtn" }, new { @class = "btn btn-primary", @value = CommonResx.Post, @id = "btnPost" })
            @Html.KoSageButton("Save", new { @sagedisable = "IsDisableSaveBtn" }, new { @class = "btn btn-primary", @id = "btnSave", @value = CommonResx.Save })
        }
    </section>
</div>
@Html.Partial(Core.GridPreferences)
@Html.Partial(Core.HamburgerMenu)

