// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Templates.Process.Script
{
    using System.Linq;
    using System.Text;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class Behaviour : BehaviourBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 1 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* The MIT License (MIT) */ 
            
            #line default
            #line hidden
            
            #line 2 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* Copyright (c) 1994-2022 The Sage Group plc or its licensors.  All rights reserved. */ 
            
            #line default
            #line hidden
            
            #line 3 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* */ 
            
            #line default
            #line hidden
            
            #line 4 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* Permission is hereby granted, free of charge, to any person obtaining a copy of */ 
            
            #line default
            #line hidden
            
            #line 5 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* this software and associated documentation files (the "Software"), to deal in */ 
            
            #line default
            #line hidden
            
            #line 6 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* the Software without restriction, including without limitation the rights to use, */ 
            
            #line default
            #line hidden
            
            #line 7 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the */ 
            
            #line default
            #line hidden
            
            #line 8 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* Software, and to permit persons to whom the Software is furnished to do so, */ 
            
            #line default
            #line hidden
            
            #line 9 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* subject to the following conditions: */ 
            
            #line default
            #line hidden
            
            #line 10 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* */ 
            
            #line default
            #line hidden
            
            #line 11 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* The above copyright notice and this permission notice shall be included in all */ 
            
            #line default
            #line hidden
            
            #line 12 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* copies or substantial portions of the Software. */ 
            
            #line default
            #line hidden
            
            #line 13 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* */ 
            
            #line default
            #line hidden
            
            #line 14 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, */ 
            
            #line default
            #line hidden
            
            #line 15 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A */ 
            
            #line default
            #line hidden
            
            #line 16 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT */ 
            
            #line default
            #line hidden
            
            #line 17 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF */ 
            
            #line default
            #line hidden
            
            #line 18 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE */ 
            
            #line default
            #line hidden
            
            #line 19 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
 /* OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */ 
            
            #line default
            #line hidden
            
            #line 25 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

    // Locals
    var entityName = view.Properties[BusinessView.Constants.EntityName];
    var localEntityName = entityName.Substring(0, 1).ToLower() + entityName.Substring(1);
    var moduleId = view.Properties[BusinessView.Constants.ModuleId].ToLower();
    var moduleIdUpper = view.Properties[BusinessView.Constants.ModuleId];
    var copyright = settings.Copyright;
    var snippet = new StringBuilder();

            
            #line default
            #line hidden
            this.Write("/* ");
            
            #line 34 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(copyright));
            
            #line default
            #line hidden
            this.Write(" */\r\n\r\n// Enable the following commented line to enable TypeScript static type ch" +
                    "ecking\r\n// @ts-check\r\n\r\n\"use strict\";\r\n\r\nvar ");
            
            #line 41 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI = ");
            
            #line 41 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI || {}\r\n\r\n");
            
            #line 43 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI = {\r\n    ");
            
            #line 44 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model: {},\r\n    computedProperties: [],\r\n\r\n    /**\r\n    * @name init\r\n    * @desc" +
                    "ription Initialize the controls and apply kendo bindings\r\n    * @namespace ");
            
            #line 50 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n    * @public\r\n    */\r\n    init: () => {     \r\n        // Initialize the cont" +
                    "rols and apply kendo bindings \r\n        ");
            
            #line 55 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initKendoBindings();          \r\n        ");
            
            #line 56 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initGrids();\r\n        ");
            
            #line 57 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initTabs();\r\n        ");
            
            #line 58 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initFinders();\r\n        ");
            
            #line 59 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initButtons();\r\n        ");
            
            #line 60 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initNumericTextboxes();\r\n        ");
            
            #line 61 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initTextboxes();\r\n        ");
            
            #line 62 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initTimePickers();\r\n        ");
            
            #line 63 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initCheckBoxes();\r\n        ");
            
            #line 64 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initBlur();\r\n        ");
            
            #line 65 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.initProcessUI();\r\n        ko.applyBindings(");
            
            #line 66 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 66 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model);\r\n    },\r\n    \r\n    /**\r\n     * @name initKendoBindings\r\n     * @descripti" +
                    "on Initialize the Kendo bindings\r\n     * @namespace ");
            
            #line 72 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initKendoBindings: () => {\r\n        ");
            
            #line 76 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 76 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model = ko.mapping.fromJS(");
            
            #line 76 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("ViewModel);       \r\n        ");
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleId));
            
            #line default
            #line hidden
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("KoExtn.");
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleId));
            
            #line default
            #line hidden
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("ModelExtension(");
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 77 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model);\r\n    },\r\n\r\n    /**\r\n     * @name initGrids\r\n     * @description Initializ" +
                    "e the grids, if any\r\n     * @namespace ");
            
            #line 83 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initGrids: () => {\r\n\r\n    },\r\n\r\n    /**\r\n     * " +
                    "@name initTabs\r\n     * @description Initialize the tabs, if any\r\n     * @namespa" +
                    "ce ");
            
            #line 93 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initTabs: () => {\r\n\r\n    },\r\n\r\n    /**\r\n     * @" +
                    "name initFinders\r\n     * @description Initialize all of the finders on the page," +
                    " if any\r\n     * @namespace ");
            
            #line 103 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initFinders: () => {\r\n");
            
            #line 107 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

    // Create code for finder
    snippet = new StringBuilder();
    SnippetHelper.FinderJavaScript(8, settings, snippet, localEntityName);
    if (!string.IsNullOrEmpty(snippet.ToString()))
    {
        WriteLine(snippet.ToString());
    }

            
            #line default
            #line hidden
            this.Write("    },\r\n\r\n     /**\r\n     * @name initNumericTextboxes\r\n     * @description Initia" +
                    "lize the numeric textboxes, if any\r\n     * @namespace ");
            
            #line 121 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initNumericTextboxes: () => {\r\n");
            
            #line 125 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

    // Create code for init numeric textboxes
    snippet = new StringBuilder();
    SnippetHelper.InitNumericTextboxesJavaScript(8, settings, snippet, view);
    if (!string.IsNullOrEmpty(snippet.ToString()))
    {
        WriteLine(snippet.ToString());
    }

            
            #line default
            #line hidden
            this.Write("    },\r\n\r\n    /**\r\n     * @name initCheckBoxes\r\n     * @description Initialize th" +
                    "e click handlers for check boxes, if any\r\n     * @namespace ");
            
            #line 139 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initCheckBoxes: () => {\r\n\r\n    },\r\n    \r\n    /**" +
                    "\r\n     * @name initBlur\r\n     * @description Initialize the onChange handlers fo" +
                    "r various controls, if needed\r\n     * @namespace ");
            
            #line 149 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initBlur: () => {\r\n\r\n    },    \r\n\r\n    /**\r\n    " +
                    " * @name initTextboxes\r\n     * @description Initialize the Kendo text boxes, if " +
                    "needed\r\n     * @namespace ");
            
            #line 159 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initTextboxes: () => {\r\n");
            
            #line 163 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

    // Create code for init textboxes
    snippet = new StringBuilder();
    SnippetHelper.InitTextboxesJavaScript(8, settings, snippet, entityName);
    if (!string.IsNullOrEmpty(snippet.ToString()))
    {
        WriteLine(snippet.ToString());
    }

            
            #line default
            #line hidden
            this.Write("    },\r\n\r\n    /**\r\n     * @name initTimePickers\r\n     * @description Initialize t" +
                    "he time pickers, if any\r\n     * @namespace ");
            
            #line 177 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initTimePickers: () => {\r\n");
            
            #line 181 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

    // Create code for init timepickers
    snippet = new StringBuilder();
    SnippetHelper.InitTimePickersJavaScript(8, settings, snippet, localEntityName, view);
    if (!string.IsNullOrEmpty(snippet.ToString()))
    {
        WriteLine(snippet.ToString());
    }

            
            #line default
            #line hidden
            this.Write("    },\r\n    \r\n    /**\r\n     * @name initButtons\r\n     * @description Initialize t" +
                    "he button click handlers\r\n     * @namespace ");
            
            #line 195 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initButtons: () => {\r\n        $(\"#btnProcess\").c" +
                    "lick((e) => {\r\n            sg.utls.SyncExecute(");
            
            #line 200 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.process);\r\n        });\r\n");
            
            #line 202 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

    // Create code for buttons, if any
    snippet = new StringBuilder();
    SnippetHelper.InitButtonsJavaScript(8, settings, snippet);
    if (!string.IsNullOrEmpty(snippet.ToString()))
    {
        WriteLine(snippet.ToString());
    }

            
            #line default
            #line hidden
            this.Write("\r\n    },\r\n    \r\n    /**\r\n     * @name process\r\n     * @description Handler for th" +
                    "e process button\r\n     * @namespace ");
            
            #line 217 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    process: () => {\r\n        sg.utls.isProcessRunni" +
                    "ng = true;\r\n        let processUrl = sg.utls.url.buildUrl(\"");
            
            #line 222 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleIdUpper));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 222 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("\", \"Process\");\r\n        \r\n        let isChecked = false;\r\n\r\n        if (!isChecke" +
                    "d) {\r\n            // Do not process\r\n            sg.utls.showMessageInfo(sg.utls" +
                    ".msgType.ERROR, ");
            
            #line 228 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Resources.NoProcessingOption);\r\n            sg.utls.isProcessRunning = false;\r\n  " +
                    "      }\r\n\r\n        // Check if form is valid\r\n        if ($(\"#frm");
            
            #line 233 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("\").valid() && sg.utls.isProcessRunning) {\r\n            // Check Validations\r\n    " +
                    "        if (");
            
            #line 235 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.Validation()) {\r\n                $(\"#message\").empty();\r\n                sg.ut" +
                    "ls.clearValidations(\"frm");
            
            #line 237 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("\");\r\n                sg.utls.isProcessRunning = true;\r\n                let data =" +
                    " { model: ko.mapping.toJS(");
            
            #line 239 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 239 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model, ");
            
            #line 239 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.computedProperties) };\r\n                sg.utls.ajaxPost(processUrl, data, onS" +
                    "uccess.process)\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * @name i" +
                    "nitProcessUI\r\n     * @description\r\n     * @namespace ");
            
            #line 248 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI\r\n     * @public\r\n     */\r\n    initProcessUI: () => {\r\n        let progressUrl " +
                    "= sg.utls.url.buildUrl(\"");
            
            #line 252 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleIdUpper));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 252 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("\", \"Progress\");\r\n        let cancelUrl = sg.utls.url.buildUrl(\"");
            
            #line 253 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(moduleIdUpper));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 253 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("\", \"Cancel\");\r\n        window.progressUI.init(progressUrl, cancelUrl, ");
            
            #line 254 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 254 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model, screenName, onSuccess.onProcessComplete);\r\n    },\r\n\r\n    /**\r\n     * @name" +
                    " Validation\r\n     * @description Page validator\r\n     * @namespace ");
            
            #line 260 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write(@"UI
     * @public
     */
    Validation: () => {
        let errorRangeMessage = """";
        let inputValid = true;

        if (!inputValid) {
            if (errorRangeMessage != """") {
                sg.utls.showMessageInfo(sg.utls.msgType.ERROR, jQuery.validator.format(");
            
            #line 269 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write(@"Resources.ErrorFromToValueMessage, errorRangeMessage));
            } else if (errorMessage != """") {
                sg.utls.showMessageInfo(sg.utls.msgType.ERROR, errorMessage);
            }
        }

        return inputValid;
    }

};

// Callbacks
var onSuccess = {
    /**
    * @name process
    * @description Process success
    * @namespace onSuccess
    * @public
    * 
    * @param {object} result - JSON result payload
    */
    process: (jsonResult) => {
        if (jsonResult.UserMessage.IsSuccess) {
            let model = ");
            
            #line 292 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 292 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write(@"Model;
            window.ko.mapping.fromJS(jsonResult.WorkflowInstanceId, {}, model.WorkflowInstanceId);
            window.progressUI.progress();
        } else {
            sg.utls.showMessage(jsonResult);
        }
    },

    /**
    * @name onProcessComplete
    * @description
    * @namespace onSuccess
    * @public
    * 
    * @param {object} result - The result of the operation
    */
    onProcessComplete: (result) => {
        if (result.ProcessResult.Results.length <= 0) {
            $(""#processingResultGrid"").hide();
            let errorMessage = ");
            
            #line 311 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Resources.ProcessingComplete;\r\n            sg.utls.showMessageInfoInCustomDivWith" +
                    "outClose(sg.utls.msgType.INFO, errorMessage, \'messageDiv\');\r\n        }\r\n    },\r\n" +
                    "};\r\n\r\n// Finder success method\r\nvar onFinderSuccess = {\r\n};\r\n\r\n// Utility\r\nvar ");
            
            #line 322 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Utility = {   \r\n    /**\r\n    * @name checkIsDirty\r\n    * @description If the mode" +
                    "l data has changed, display confirmation dialog box\r\n    * @namespace ");
            
            #line 326 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Utility\r\n    * @public\r\n    * \r\n    * @param {object} yesFunctionToCall - Callbac" +
                    "k for Yes\r\n    * @param {object} noFunctionToCall - Callback for No\r\n    */\r\n   " +
                    " checkIsDirty: (yesFunctionToCall, noFunctionToCall) => {\r\n        if (");
            
            #line 333 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 333 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model.IsKo");
            
            #line 333 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write("Dirty && ");
            
            #line 333 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.");
            
            #line 333 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("Model.IsKo");
            
            #line 333 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entityName));
            
            #line default
            #line hidden
            this.Write(@"Dirty.isDirty()) {
            sg.utls.showKendoConfirmationDialog(
                () => { // Yes
                    yesFunctionToCall.call();
                },
                () => { // No
                    noFunctionToCall.call();
                },
                $.validator.format(globalResource.SaveConfirm));
        } else {
            yesFunctionToCall.call();
        }
    },
};

// UI Callbacks
var ");
            
            #line 349 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UISuccess = {   \r\n\r\n};\r\n\r\n// Finder Cancel method\r\nvar onFinderCancel = {\r\n\r\n};\r\n" +
                    "\r\n// Initial Entry\r\n$(() => {\r\n    ");
            
            #line 360 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(localEntityName));
            
            #line default
            #line hidden
            this.Write("UI.init();\r\n});");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "C:\Development\Branches\SDK\Sage300-SDK\src\wizards\CodeGenerationWizard\Templates\Process\Script\Behaviour.tt"

private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView _viewField;

/// <summary>
/// Access the view parameter of the template.
/// </summary>
private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView view
{
    get
    {
        return this._viewField;
    }
}

private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings _settingsField;

/// <summary>
/// Access the settings parameter of the template.
/// </summary>
private global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings settings
{
    get
    {
        return this._settingsField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool viewValueAcquired = false;
if (this.Session.ContainsKey("view"))
{
    this._viewField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView)(this.Session["view"]));
    viewValueAcquired = true;
}
if ((viewValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("view");
    if ((data != null))
    {
        this._viewField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView)(data));
    }
}
bool settingsValueAcquired = false;
if (this.Session.ContainsKey("settings"))
{
    this._settingsField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings)(this.Session["settings"]));
    settingsValueAcquired = true;
}
if ((settingsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("settings");
    if ((data != null))
    {
        this._settingsField = ((global::Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class BehaviourBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
