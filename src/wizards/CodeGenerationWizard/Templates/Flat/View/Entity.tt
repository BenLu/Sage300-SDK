<# /* The MIT License (MIT) */ #>
<# /* Copyright (c) 1994-2021 The Sage Group plc or its licensors.  All rights reserved. */ #>
<# /* */ #>
<# /* Permission is hereby granted, free of charge, to any person obtaining a copy of */ #>
<# /* this software and associated documentation files (the "Software"), to deal in */ #>
<# /* the Software without restriction, including without limitation the rights to use, */ #>
<# /* copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the */ #>
<# /* Software, and to permit persons to whom the Software is furnished to do so, */ #>
<# /* subject to the following conditions: */ #>
<# /* */ #>
<# /* The above copyright notice and this permission notice shall be included in all */ #>
<# /* copies or substantial portions of the Software. */ #>
<# /* */ #>
<# /* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, */ #>
<# /* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A */ #>
<# /* PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT */ #>
<# /* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF */ #>
<# /* CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE */ #>
<# /* OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */ #>
<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView" name="view" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings" name="settings" #>
<#
    // Locals
    var entityName = view.Properties[BusinessView.Constants.EntityName];
    var resxName = view.Properties[BusinessView.Constants.ResxName];
    var moduleId = settings.ModuleId;
    var copyright = settings.Copyright;
    var companyNamespace = settings.CompanyNamespace;
    var keyFieldName = view.Keys.FirstOrDefault();
    var modelName = view.Properties[BusinessView.Constants.ModelName];

    var webModuleNamespace = (settings.DoesAreasExist ? (settings.WebProjectIncludesModule ? moduleId + "." : string.Empty) + 
	"Web.Areas." + moduleId : moduleId + ".Web");

    var xmlLayout = settings.XmlLayout;
#>
@* <#=copyright#> *@
<#
if (view.Options[BusinessView.Constants.GenerateGrid])
{
#>
	@model <#=companyNamespace#>.<#=webModuleNamespace#>.Models.<#=entityName#>ViewModel
<#
}
else
{
#>
	@model <#=companyNamespace#>.<#=webModuleNamespace#>.Models.<#=entityName#>ViewModel<<#=companyNamespace#>.<#=moduleId#>.Models.<#=modelName#>>
<#
}
#>

@using <#=resxName#> = <#=companyNamespace#>.<#=moduleId#>.Resources.Forms.<#=resxName#>
@using <#=companyNamespace#>.<#=moduleId#>.Web.Areas.<#=moduleId#>.Constants

@using Sage.CA.SBS.ERP.Sage300.Common.Web.AreaConstants
@using Sage.CA.SBS.ERP.Sage300.Common.Resources
@using Sage.CA.SBS.ERP.Sage300.Common.Web.HtmlHelperExtension
@using Sage.CA.SBS.ERP.Sage300.Common.Models.Enums
@using AnnotationsResx = Sage.CA.SBS.ERP.Sage300.Common.Resources.AnnotationsResx

<script type="text/javascript">
    @Html.ConvertToJsVariableUsingNewtonSoft("<#=entityName#>ViewModel", Model)
</script>

@Html.Partial("~/Areas/<#=moduleId#>/Views/<#=entityName#>/Partials/_Localization.cshtml")

<div id="success" class="message"></div>

<div class="form-screen">
    <div id="message"></div>
    <header>
        <section class="header-group-1">
            <div class="header-wrapper">
                <div class="header-headline">
                    @Html.SageHeader1Label("<#=entityName#>Header", <#=resxName#>.Entity)
                </div>
                @Html.Partial(Core.OptionsMenu, Model.UserAccess)	
	<#
	if (!view.Options[BusinessView.Constants.GenerateGrid])
	{
    #>
			<div class="header-options">
                    @if (Model.UserAccess.SecurityType.HasFlag(SecurityType.Modify))
                    {
                        @Html.KoSageButton("btnNew", null, new { @value = CommonResx.CreateNew, @id = "btnNew", @class = "btn btn-primary" })
                    }
                </div>
<#
}
#>
            </div>
            <div class="flag-required">
                <span class="req-option">@CommonResx.RequiredLegend</span>
            </div>
        </section>
    </header>
<#
        if (xmlLayout == null)
        {
            WriteLine(new string(' ', 4) + "<div class=\"form-group\">");
        }
#>
<# 
	if (view.Options[BusinessView.Constants.GenerateGrid])
	{
		var gridName = entityName.Substring(0, 1).ToLower() +  entityName.Substring(1);
		WriteLine("@Html.SageGrid(\"{0}Grid\", (Sage.CA.SBS.ERP.Sage300.Common.Models.GridDefinition)@ViewBag.{1}Grid)", gridName, view.Properties[BusinessView.Constants.EntityName]);
	}
    else if (xmlLayout != null)
    {
        // XML Layout has been specified and therefore generate layout using this instead of generating
        // only the key field

        // Counter for indentation
        int depth = 0;

        // Get first element and proceed if there are elements specified
        var element = xmlLayout.Root.Descendants().First();

        // Iterate xml and apply snippets directly to template
        if (element.HasElements)
        {
            // Recursion
            var snippet = new StringBuilder();
            SnippetHelper.GenerateWidgets(depth, element, snippet, settings, view);
            WriteLine(snippet.ToString());
        }
    }
	else
	{
        // No XML layout specified, therefore we will no longer generate only the key field
	}
        if (xmlLayout == null)
        {
            WriteLine(new string(' ', 4) + "</div>");
        }
#>
    <section class="footer-group-1">
        @if (Model.UserAccess.SecurityType.HasFlag(SecurityType.Modify))
        {
            @Html.KoSageButton("btnSave", new { }, new { @value = CommonResx.Save, @id = "btnSave", @class = "btn btn-primary" })

<#
	if (!view.Options[BusinessView.Constants.GenerateGrid])
	{
#>
			@Html.KoSageButton("btnDelete", new { }, new { @value = CommonResx.Delete, @id = "btnDelete", @class = "btn btn-primary" })
<#
	}
#>
      }
    </section>
</div>