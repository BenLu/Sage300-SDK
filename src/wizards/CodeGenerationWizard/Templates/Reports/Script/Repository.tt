<# /* The MIT License (MIT) */ #>
<# /* Copyright (c) 1994-2022 The Sage Group plc or its licensors.  All rights reserved. */ #>
<# /* */ #>
<# /* Permission is hereby granted, free of charge, to any person obtaining a copy of */ #>
<# /* this software and associated documentation files (the "Software"), to deal in */ #>
<# /* the Software without restriction, including without limitation the rights to use, */ #>
<# /* copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the */ #>
<# /* Software, and to permit persons to whom the Software is furnished to do so, */ #>
<# /* subject to the following conditions: */ #>
<# /* */ #>
<# /* The above copyright notice and this permission notice shall be included in all */ #>
<# /* copies or substantial portions of the Software. */ #>
<# /* */ #>
<# /* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, */ #>
<# /* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A */ #>
<# /* PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT */ #>
<# /* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF */ #>
<# /* CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE */ #>
<# /* OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */ #>
<#@ template language="C#" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView" name="view" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings" name="settings" #>
<#
    // Locals
    var entityName = view.Properties[BusinessView.Constants.EntityName];
    var localEntityName = entityName.Substring(0, 1).ToLower() + entityName.Substring(1);
    var moduleIdUpper = view.Properties[BusinessView.Constants.ModuleId];
    var copyright = settings.Copyright;
#>
/* <#=copyright#> */

// Enable the following commented line to enable TypeScript static type checking
// @ts-check

"use strict";

var <#=localEntityName#>Repository = <#=localEntityName#>Repository || {};

<#=localEntityName#>Repository = {
    /**
     * @name execute<#=localEntityName#>RepositoryReport
     * @description Execute an ajax post request
     * @namespace <#=localEntityName#>Repository
     * @public
     * 
     * @param {object} viewModel The model data to post to server
     */
    execute<#=localEntityName#>RepositoryReport: (viewModel) => {
        let data = <#=localEntityName#>Repository.getUnobservableData(viewModel);
        let url = sg.utls.url.buildUrl("<#=moduleIdUpper#>", "<#=entityName#>", "Execute");
        let callback = <#=localEntityName#>OnSuccess.execute;
        sg.utls.ajaxPost(url, data, callback);
    },

    /**
     * @name getUnobservableData
     * @description Gets observable data
     * @namespace <#=localEntityName#>Repository
     * @public
     * 
     * @param {object} model The model data
     */
    getUnobservableData: (model) => {
        var data = {
            report: ko.mapping.toJS(model)
        };
        return data;
    }
};