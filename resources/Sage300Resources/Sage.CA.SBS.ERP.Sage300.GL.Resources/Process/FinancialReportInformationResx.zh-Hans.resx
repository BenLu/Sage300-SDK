<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountGroup" xml:space="preserve">
    <value>科目群组</value>
  </data>
  <data name="AccountNo" xml:space="preserve">
    <value>科目编号</value>
  </data>
  <data name="AccountNumber" xml:space="preserve">
    <value>账号</value>
  </data>
  <data name="AccountSortedGroup" xml:space="preserve">
    <value>科目排序群组</value>
  </data>
  <data name="Actual" xml:space="preserve">
    <value>实际</value>
  </data>
  <data name="AddUpdate" xml:space="preserve">
    <value>添加/更新</value>
  </data>
  <data name="AuditInformation" xml:space="preserve">
    <value>审计信息</value>
  </data>
  <data name="Consolidated" xml:space="preserve">
    <value>合并</value>
  </data>
  <data name="CreateNewStatement" xml:space="preserve">
    <value>新建报表</value>
  </data>
  <data name="DontShowThisAgain" xml:space="preserve">
    <value>不再显示</value>
  </data>
  <data name="DrillDownInformation" xml:space="preserve">
    <value>下钻信息</value>
  </data>
  <data name="DuplicateStatementName" xml:space="preserve">
    <value>具有此名称的报表已存在。为您的报表指定唯一的名称。</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>总帐/报告设计器</value>
  </data>
  <data name="ErrorMessage_AccountRange" xml:space="preserve">
    <value>&lt;从科目&gt;框中的输入不能大于&lt;到&gt;框中的输入。</value>
  </data>
  <data name="ErrorMessage_NoChartOfAccounts" xml:space="preserve">
    <value>没有建立科目表。</value>
  </data>
  <data name="ErrorMessage_Range" xml:space="preserve">
    <value>《从》框中的录入不能大于《到》框中的录入。</value>
  </data>
  <data name="ErrorMessage_SegmentRange" xml:space="preserve">
    <value>&lt;从节段&gt;框中的输入不能大于&lt;到&gt;框中的输入。</value>
  </data>
  <data name="FileHasBeenDownloaded" xml:space="preserve">
    <value>报表“{0}”已保存到您的计算机。在 Microsoft Excel 中编辑此报表，然后单击“添加/更新”按钮以使更改生效。</value>
  </data>
  <data name="FiscalOption" xml:space="preserve">
    <value>财务期间选项</value>
  </data>
  <data name="Formulas" xml:space="preserve">
    <value>公式</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>从 {0}</value>
  </data>
  <data name="FromAccountGroup" xml:space="preserve">
    <value>从科目群组</value>
  </data>
  <data name="FromAccountNumber" xml:space="preserve">
    <value>从账号</value>
  </data>
  <data name="FromSortCodeAccountGroup" xml:space="preserve">
    <value>从排序代码 - 科目群组</value>
  </data>
  <data name="GenerateStatement" xml:space="preserve">
    <value>生成报表</value>
  </data>
  <data name="GetAddin" xml:space="preserve">
    <value>获取附加程序</value>
  </data>
  <data name="GetStarted" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="GetStartedText" xml:space="preserve">
    <value>安装 Microsoft Excel 所需的附加程序，然后创建您的第一份财务报表！</value>
  </data>
  <data name="GetStartedTitle" xml:space="preserve">
    <value>开始使用财务报表器</value>
  </data>
  <data name="Include" xml:space="preserve">
    <value>包括</value>
  </data>
  <data name="InvalidStatementName" xml:space="preserve">
    <value>报表名称无效。</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>已修改</value>
  </data>
  <data name="Modify" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NameYourNewStatement" xml:space="preserve">
    <value>命名您的新报表</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="OldName" xml:space="preserve">
    <value>旧名称</value>
  </data>
  <data name="PleaseinstallAddin" xml:space="preserve">
    <value>请安装附加程序以打印财务报表。</value>
  </data>
  <data name="PrintFinancialStatements" xml:space="preserve">
    <value>总帐/打印财务报告</value>
  </data>
  <data name="Provisional" xml:space="preserve">
    <value>暂过帐</value>
  </data>
  <data name="RelaceTheContent" xml:space="preserve">
    <value>是否要将报表“{0}”中的报告规范替换为文件“{1}”中的规范？</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>移除</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>重命名</value>
  </data>
  <data name="RenameStatement" xml:space="preserve">
    <value>重命名报表</value>
  </data>
  <data name="ReportAs" xml:space="preserve">
    <value>报告为</value>
  </data>
  <data name="ReportOptions" xml:space="preserve">
    <value>报表选项</value>
  </data>
  <data name="ReportType" xml:space="preserve">
    <value>报表类型</value>
  </data>
  <data name="Segment" xml:space="preserve">
    <value>节段</value>
  </data>
  <data name="SegmentName" xml:space="preserve">
    <value>节段名称</value>
  </data>
  <data name="SelectAccountGroupsBySortCodeRange" xml:space="preserve">
    <value>按排序代码范围选择科目群组</value>
  </data>
  <data name="Selectstatement" xml:space="preserve">
    <value>请选择一个报表。</value>
  </data>
  <data name="Separate" xml:space="preserve">
    <value>分列</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>排序按</value>
  </data>
  <data name="StatementName" xml:space="preserve">
    <value>报表名称</value>
  </data>
  <data name="Statements" xml:space="preserve">
    <value>报表</value>
  </data>
  <data name="StatementUpdated" xml:space="preserve">
    <value>报表 {0} 已更新，随时可以使用。</value>
    <comment>F</comment>
  </data>
  <data name="Title" xml:space="preserve">
    <value>总帐/财务报告设计器</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>到 {0}</value>
  </data>
  <data name="ToAccountGroup" xml:space="preserve">
    <value>到科目群组</value>
  </data>
  <data name="ToAccountNumber" xml:space="preserve">
    <value>到账号</value>
  </data>
  <data name="ToSortCodeAccountGroup" xml:space="preserve">
    <value>到排序代码 - 科目群组</value>
  </data>
</root>