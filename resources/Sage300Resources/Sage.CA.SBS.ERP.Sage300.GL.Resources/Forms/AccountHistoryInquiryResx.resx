<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="Fiscalsetyear" xml:space="preserve">
    <value>Fiscal set year</value>
  </data>
  <data name="FiscalsetDesignator" xml:space="preserve">
    <value>Fiscal set Designator</value>
  </data>
  <data name="Currencycode" xml:space="preserve">
    <value>Currency code</value>
  </data>
  <data name="RESERVEDRevaluationswitch" xml:space="preserve">
    <value>RESERVED Revaluation switch</value>
  </data>
  <data name="RESERVEDRevaluationcode" xml:space="preserve">
    <value>RESERVED Revaluation code</value>
  </data>
  <data name="Sourcecurrencydecimals" xml:space="preserve">
    <value>Source currency decimals</value>
  </data>
  <data name="BeginningBalance" xml:space="preserve">
    <value>Beginning Balance</value>
  </data>
  <data name="Period01netamount" xml:space="preserve">
    <value>Period 01 net amount</value>
  </data>
  <data name="Period02netamount" xml:space="preserve">
    <value>Period 02 net amount</value>
  </data>
  <data name="Period03netamount" xml:space="preserve">
    <value>Period 03 net amount</value>
  </data>
  <data name="Period04netamount" xml:space="preserve">
    <value>Period 04 net amount</value>
  </data>
  <data name="Period05netamount" xml:space="preserve">
    <value>Period 05 net amount</value>
  </data>
  <data name="Period06netamount" xml:space="preserve">
    <value>Period 06 net amount</value>
  </data>
  <data name="Period07netamount" xml:space="preserve">
    <value>Period 07 net amount</value>
  </data>
  <data name="Period08netamount" xml:space="preserve">
    <value>Period 08 net amount</value>
  </data>
  <data name="Period09netamount" xml:space="preserve">
    <value>Period 09 net amount</value>
  </data>
  <data name="Period10netamount" xml:space="preserve">
    <value>Period 10 net amount</value>
  </data>
  <data name="Period11netamount" xml:space="preserve">
    <value>Period 11 net amount</value>
  </data>
  <data name="Period12netamount" xml:space="preserve">
    <value>Period 12 net amount</value>
  </data>
  <data name="Period13netamount" xml:space="preserve">
    <value>Period 13 net amount</value>
  </data>
  <data name="Period14netamount" xml:space="preserve">
    <value>Period 14 net amount</value>
  </data>
  <data name="Period15netamount" xml:space="preserve">
    <value>Period 15 net amount</value>
  </data>
  <data name="RESERVEDDate" xml:space="preserve">
    <value>RESERVED Date</value>
  </data>
  <data name="Allowspecificcurrenciesswitch" xml:space="preserve">
    <value>Allow specific currencies switch</value>
  </data>
  <data name="Processasytdbalancesswitch" xml:space="preserve">
    <value>Process as ytd balances switch</value>
  </data>
  <data name="RESERVEDupdateswitch" xml:space="preserve">
    <value>RESERVED update switch</value>
  </data>
  <data name="YearTodateamount" xml:space="preserve">
    <value>Year to date amount</value>
  </data>
  <data name="Period01balanceamount" xml:space="preserve">
    <value>Period 01 balance amount</value>
  </data>
  <data name="Period02balanceamount" xml:space="preserve">
    <value>Period 02 balance amount</value>
  </data>
  <data name="Period03balanceamount" xml:space="preserve">
    <value>Period 03 balance amount</value>
  </data>
  <data name="Period04balanceamount" xml:space="preserve">
    <value>Period 04 balance amount</value>
  </data>
  <data name="Period05balanceamount" xml:space="preserve">
    <value>Period 05 balance amount</value>
  </data>
  <data name="Period06balanceamount" xml:space="preserve">
    <value>Period 06 balance amount</value>
  </data>
  <data name="Period07balanceamount" xml:space="preserve">
    <value>Period 07 balance amount</value>
  </data>
  <data name="Period08balanceamount" xml:space="preserve">
    <value>Period 08 balance amount</value>
  </data>
  <data name="Period09balanceamount" xml:space="preserve">
    <value>Period 09 balance amount</value>
  </data>
  <data name="Period10balanceamount" xml:space="preserve">
    <value>Period 10 balance amount</value>
  </data>
  <data name="Period11balanceamount" xml:space="preserve">
    <value>Period 11 balance amount</value>
  </data>
  <data name="Period12balanceamount" xml:space="preserve">
    <value>Period 12 balance amount</value>
  </data>
  <data name="Period13balanceamount" xml:space="preserve">
    <value>Period 13 balance amount</value>
  </data>
  <data name="Period14balanceamount" xml:space="preserve">
    <value>Period 14 balance amount</value>
  </data>
  <data name="Period15balanceamount" xml:space="preserve">
    <value>Period 15 balance amount</value>
  </data>
  <data name="Replacementswitch" xml:space="preserve">
    <value>Replacement switch</value>
  </data>
  <data name="Overrideratetypecode" xml:space="preserve">
    <value>Override rate type code</value>
  </data>
  <data name="Overriderate" xml:space="preserve">
    <value>Override rate</value>
  </data>
  <data name="Activityswitch" xml:space="preserve">
    <value>Activity switch</value>
  </data>
  <data name="Rollupswitch" xml:space="preserve">
    <value>Rollup switch</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>G/L Account History Inquiry</value>
    <comment>Screen Title</comment>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="NetChange" xml:space="preserve">
    <value>Net Change</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="ShowQuantity" xml:space="preserve">
    <value>Show Quantity</value>
  </data>
  <data name="TotalNetChange" xml:space="preserve">
    <value>Total Net Change</value>
  </data>
  <data name="TotalQuantity" xml:space="preserve">
    <value>Total Quantity</value>
  </data>
</root>