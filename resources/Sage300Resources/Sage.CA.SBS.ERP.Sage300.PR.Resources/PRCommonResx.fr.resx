<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accrued" xml:space="preserve">
    <value>Cumulées</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Actif</value>
  </data>
  <data name="AddSuccessMessage" xml:space="preserve">
    <value>{0} ajouté(es) avec succès.</value>
  </data>
  <data name="AdvancesReceivable" xml:space="preserve">
    <value>Avances à recevoir</value>
  </data>
  <data name="AdvancesReceivableAccountDescription" xml:space="preserve">
    <value>Descr.-Cpte avances à recevoir</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tous</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Saisie erronée. La banque n'est pas définie.</value>
  </data>
  <data name="BankCode" xml:space="preserve">
    <value>Code de banque</value>
  </data>
  <data name="Banked" xml:space="preserve">
    <value>Banques d’heures</value>
  </data>
  <data name="btnOpen" xml:space="preserve">
    <value>Ouvrir</value>
  </data>
  <data name="CheckDate" xml:space="preserve">
    <value>Date du chèque</value>
  </data>
  <data name="ChequeDate" xml:space="preserve">
    <value>Date du chèque</value>
  </data>
  <data name="Compensatory" xml:space="preserve">
    <value>Compensatoire</value>
  </data>
  <data name="CostCenterOverride" xml:space="preserve">
    <value>Subst. centre coûts</value>
  </data>
  <data name="CPPRCheckList" xml:space="preserve">
    <value>PRChequeList</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Type de document</value>
  </data>
  <data name="EarningDeduction" xml:space="preserve">
    <value>Gain/retenue</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employé</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>Nom de l’employé</value>
  </data>
  <data name="EmployerExpenseAccount" xml:space="preserve">
    <value>Cpte de charges-Employeur</value>
  </data>
  <data name="EmployerExpenseAccountDescription" xml:space="preserve">
    <value>Descr. compte de charges-Employeur</value>
  </data>
  <data name="EmployerLiabilityAccount" xml:space="preserve">
    <value>Cpte de passif-Employeur</value>
  </data>
  <data name="EmployerLiabilityAccountDescription" xml:space="preserve">
    <value>Descr. compte de passif-Employeur</value>
  </data>
  <data name="EmptyEmployee" xml:space="preserve">
    <value>Saisie erronée. L’employé ne peut pas être en blanc.</value>
  </data>
  <data name="EmptySelectionList" xml:space="preserve">
    <value>Saisie erronée. La liste de sélection ne peut pas être en blanc.</value>
  </data>
  <data name="FromCheckDate" xml:space="preserve">
    <value>De date chèque</value>
  </data>
  <data name="FromEmployee" xml:space="preserve">
    <value>De l’employé</value>
  </data>
  <data name="GLDistCode" xml:space="preserve">
    <value>Code de ventilation du GL</value>
  </data>
  <data name="HistoryEntry" xml:space="preserve">
    <value>Entrée historique</value>
  </data>
  <data name="InavlidEmployee" xml:space="preserve">
    <value>Saisie erronée. L'employé n'existe pas</value>
  </data>
  <data name="InvalidCalculationSequence" xml:space="preserve">
    <value>La séquence de calcul {0} n’existe pas.</value>
  </data>
  <data name="InvalidEntryMessage" xml:space="preserve">
    <value> La valeur du champ « Du » ne peut pas être supérieure à la valeur du champ « Au ».</value>
  </data>
  <data name="InvalidFromDate" xml:space="preserve">
    <value> La date de début n’est pas valide </value>
  </data>
  <data name="InvalidInput" xml:space="preserve">
    <value>Saisie erronée. Le champ optionnel ne peut pas être en blanc.</value>
  </data>
  <data name="InvalidInputFormatting" xml:space="preserve">
    <value> Saisissez une valeur valide</value>
  </data>
  <data name="InvalidPeriodEndDateFormat" xml:space="preserve">
    <value>La date fin de période n’est pas valide.</value>
  </data>
  <data name="InvalidSelectionList" xml:space="preserve">
    <value>Saisie erronée. La liste de sélection n'existe pas.</value>
  </data>
  <data name="InvalidToDate" xml:space="preserve">
    <value> La date de fin n'est pas valide </value>
  </data>
  <data name="InvalidYear" xml:space="preserve">
    <value>Saisie erronée. L’année est hors de la plage.</value>
  </data>
  <data name="LaterCalculationSequence" xml:space="preserve">
    <value>La séquence de calcul {0} a une date de fin de période ultérieure.</value>
  </data>
  <data name="Liability" xml:space="preserve">
    <value>Passif</value>
  </data>
  <data name="LiabilityAccountDescription" xml:space="preserve">
    <value>Description-Cpte de passif</value>
  </data>
  <data name="ManualCheck" xml:space="preserve">
    <value>Chèque manuel</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Ouvrir</value>
  </data>
  <data name="Overtime" xml:space="preserve">
    <value>Heures suppl.</value>
  </data>
  <data name="OvertimeExpense" xml:space="preserve">
    <value>Cpte charges-Hres suppl.</value>
  </data>
  <data name="OvertimeExpenseAccountDescription" xml:space="preserve">
    <value>Descr.-Cpte de charges d'heures suppl.</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Payé</value>
  </data>
  <data name="PeriodEndDate" xml:space="preserve">
    <value>Date fin période</value>
  </data>
  <data name="PostingStatus" xml:space="preserve">
    <value>État report</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Imprimer</value>
  </data>
  <data name="RateAmtPct" xml:space="preserve">
    <value>Taux/Mont/P.c.</value>
  </data>
  <data name="Regular" xml:space="preserve">
    <value>Régulier</value>
  </data>
  <data name="RegularExpense" xml:space="preserve">
    <value>Cpte charges-salaire régulier</value>
  </data>
  <data name="RegularExpenseAccountDescription" xml:space="preserve">
    <value>Descr.-Cpte de charges salaire régulier</value>
  </data>
  <data name="ReversedCheck" xml:space="preserve">
    <value>Chèque contrepassé</value>
  </data>
  <data name="Segments" xml:space="preserve">
    <value>Segments</value>
  </data>
  <data name="SelectionList" xml:space="preserve">
    <value>Liste de sélection</value>
  </data>
  <data name="SelectOneCheckType" xml:space="preserve">
    <value>Vous devez cocher au moins une case de fréquence de paie.</value>
  </data>
  <data name="SelectOneChequeType" xml:space="preserve">
    <value>Vous devez cocher au moins une case de fréquence de paie.</value>
  </data>
  <data name="SelectOneStatusType" xml:space="preserve">
    <value>Vous devez cocher Actif ou Inactif.</value>
  </data>
  <data name="Shift" xml:space="preserve">
    <value>Quart</value>
  </data>
  <data name="ShiftExpense" xml:space="preserve">
    <value>Cpte charges-Quart</value>
  </data>
  <data name="ShiftExpenseAccountDescription" xml:space="preserve">
    <value>Descr.-Cpte de charges de prime de quart</value>
  </data>
  <data name="ShiftSchedule" xml:space="preserve">
    <value>Table de quart</value>
  </data>
  <data name="Sick" xml:space="preserve">
    <value>Maladie</value>
  </data>
  <data name="SystemCheck" xml:space="preserve">
    <value>Chèque système</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Impôt</value>
  </data>
  <data name="TaxDescription" xml:space="preserve">
    <value>Description de l’impôt</value>
  </data>
  <data name="Taxes" xml:space="preserve">
    <value>Impôts</value>
  </data>
  <data name="TimesLate" xml:space="preserve">
    <value>Retards</value>
  </data>
  <data name="ToCheckDate" xml:space="preserve">
    <value>À la date de chèque</value>
  </data>
  <data name="ToEmployee" xml:space="preserve">
    <value>À l'employé</value>
  </data>
  <data name="TransactionCode" xml:space="preserve">
    <value>Code de transaction</value>
  </data>
  <data name="TypeOfCheckDocument" xml:space="preserve">
    <value>Type de document</value>
  </data>
  <data name="UnavailableCalculationSequence" xml:space="preserve">
    <value>Il n'y a rien à reporter dans la séquence de calcul {0}.</value>
  </data>
  <data name="UPPRCheckList" xml:space="preserve">
    <value>PRCheckList</value>
  </data>
  <data name="UseOptionalFields" xml:space="preserve">
    <value>Utiliser des champs optionnels</value>
  </data>
  <data name="Vacation" xml:space="preserve">
    <value>Vacances</value>
  </data>
  <data name="WCCGroup" xml:space="preserve">
    <value>Groupe CSST</value>
  </data>
  <data name="WorkClassificationDescription" xml:space="preserve">
    <value>Descr. classif. des activités</value>
  </data>
  <data name="WorkersCompCode" xml:space="preserve">
    <value>Code CSST</value>
  </data>
  <data name="WorkersCompDescription" xml:space="preserve">
    <value>Description -CSST</value>
  </data>
</root>