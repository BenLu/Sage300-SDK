<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategoryPercentageComplete" xml:space="preserve">
    <value>Category Percentage Complete</value>
  </data>
  <data name="EmployeeExtendedAmount" xml:space="preserve">
    <value>Employee Extended Amount</value>
  </data>
  <data name="UserTax" xml:space="preserve">
    <value>User Tax</value>
  </data>
  <data name="ContractCode" xml:space="preserve">
    <value>Contract Code</value>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>Resource</value>
  </data>
  <data name="WIPCOSAcct" xml:space="preserve">
    <value>WIP/COS Acct</value>
  </data>
  <data name="BillingsAndCosts" xml:space="preserve">
    <value>Billings and Costs</value>
  </data>
  <data name="LaborBurdenAccount" xml:space="preserve">
    <value>Labor Burden Account</value>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="ExtendedBillingAmount" xml:space="preserve">
    <value>Extended Billing Amount</value>
  </data>
  <data name="EarningDeduction" xml:space="preserve">
    <value>Earning/Deduction</value>
  </data>
  <data name="ExpenseReimbursement" xml:space="preserve">
    <value>Expense Reimbursement</value>
  </data>
  <data name="Miscellaneous" xml:space="preserve">
    <value>Miscellaneous</value>
  </data>
  <data name="EarningsDeductions" xml:space="preserve">
    <value>EarningsDeductions</value>
  </data>
  <data name="FCOverheadAmount" xml:space="preserve">
    <value>(FC) Overhead Amount</value>
  </data>
  <data name="AccountingMethod" xml:space="preserve">
    <value>Accounting Method</value>
  </data>
  <data name="NoAction" xml:space="preserve">
    <value>No Action</value>
  </data>
  <data name="ResourceDescription" xml:space="preserve">
    <value>Resource Description</value>
  </data>
  <data name="Taxes" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>PR CheckJobDetail</value>
  </data>
  <data name="Overtime" xml:space="preserve">
    <value>Overtime</value>
  </data>
  <data name="PJCTransactionNumber" xml:space="preserve">
    <value>PJC Transaction Number</value>
  </data>
  <data name="Deduction" xml:space="preserve">
    <value>Deduction</value>
  </data>
  <data name="EntrySequence" xml:space="preserve">
    <value>Entry Sequence</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="Subcontractor" xml:space="preserve">
    <value>Subcontractor</value>
  </data>
  <data name="StateTax" xml:space="preserve">
    <value>State Tax</value>
  </data>
  <data name="CostClass" xml:space="preserve">
    <value>Cost Class</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ProjectType" xml:space="preserve">
    <value>Project Type</value>
  </data>
  <data name="BillingRate" xml:space="preserve">
    <value>Billing Rate</value>
  </data>
  <data name="FCLaborBurdenAmount" xml:space="preserve">
    <value>(FC) Labor Burden Amount</value>
  </data>
  <data name="Accrual" xml:space="preserve">
    <value>Accrual</value>
  </data>
  <data name="LocalTax" xml:space="preserve">
    <value>Local Tax</value>
  </data>
  <data name="Regular" xml:space="preserve">
    <value>Regular</value>
  </data>
  <data name="ProjectPercentageComplete" xml:space="preserve">
    <value>Project Percentage Complete</value>
  </data>
  <data name="CompletedContract" xml:space="preserve">
    <value>Completed Contract</value>
  </data>
  <data name="BillingType" xml:space="preserve">
    <value>Billing Type</value>
  </data>
  <data name="CurrencyDescription" xml:space="preserve">
    <value>Currency Description</value>
  </data>
  <data name="Basic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="Material" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="Advance" xml:space="preserve">
    <value>Advance</value>
  </data>
  <data name="EFT" xml:space="preserve">
    <value>EFT</value>
  </data>
  <data name="OverheadAmount" xml:space="preserve">
    <value>Overhead Amount</value>
  </data>
  <data name="BackupWithholding" xml:space="preserve">
    <value>Backup Withholding</value>
  </data>
  <data name="JobLineNumber" xml:space="preserve">
    <value>Job Line Number</value>
  </data>
  <data name="Earning" xml:space="preserve">
    <value>Earning</value>
  </data>
  <data name="FederalTax" xml:space="preserve">
    <value>Federal Tax</value>
  </data>
  <data name="Benefit" xml:space="preserve">
    <value>Benefit</value>
  </data>
  <data name="na" xml:space="preserve">
    <value>n/a</value>
  </data>
  <data name="NormalWithholding" xml:space="preserve">
    <value>Normal Withholding</value>
  </data>
  <data name="CategoryCode" xml:space="preserve">
    <value>Category Code</value>
  </data>
  <data name="Overhead" xml:space="preserve">
    <value>Overhead</value>
  </data>
  <data name="ProcessCommandCode" xml:space="preserve">
    <value>Process Command Code</value>
  </data>
  <data name="LaborHoursPercentageComplete" xml:space="preserve">
    <value>Labor Hours Percentage Complete</value>
  </data>
  <data name="ShiftDifferential" xml:space="preserve">
    <value>Shift Differential</value>
  </data>
  <data name="ARItemNumber" xml:space="preserve">
    <value>A/R Item Number</value>
  </data>
  <data name="ProjectCode" xml:space="preserve">
    <value>Project Code</value>
  </data>
  <data name="TimeAndMaterials" xml:space="preserve">
    <value>Time and Materials</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="PeriodEndDate" xml:space="preserve">
    <value>Period End Date</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="LineNumber" xml:space="preserve">
    <value>Line Number</value>
  </data>
  <data name="FixedPrice" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="Nonbillable" xml:space="preserve">
    <value>Non-billable</value>
  </data>
  <data name="ProjectStyle" xml:space="preserve">
    <value>Project Style</value>
  </data>
  <data name="LineType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="NoCharge" xml:space="preserve">
    <value>No Charge</value>
  </data>
  <data name="UnformattedContractCode" xml:space="preserve">
    <value>Unformatted Contract Code</value>
  </data>
  <data name="Billable" xml:space="preserve">
    <value>Billable</value>
  </data>
  <data name="BillingCurrency" xml:space="preserve">
    <value>Billing Currency</value>
  </data>
  <data name="Equipment" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="Employer" xml:space="preserve">
    <value>Employer</value>
  </data>
  <data name="SupplementalWithholding" xml:space="preserve">
    <value>Supplemental Withholding</value>
  </data>
  <data name="OverheadAccount" xml:space="preserve">
    <value>Overhead Account</value>
  </data>
  <data name="NumberOfOptionalFields" xml:space="preserve">
    <value>Number of Optional Fields</value>
  </data>
  <data name="CompletedProject" xml:space="preserve">
    <value>Completed Project</value>
  </data>
  <data name="OptionalFields" xml:space="preserve">
    <value>OptionalFields</value>
  </data>
  <data name="Labor" xml:space="preserve">
    <value>Labor</value>
  </data>
  <data name="CostPlus" xml:space="preserve">
    <value>Cost Plus</value>
  </data>
  <data name="StopTime" xml:space="preserve">
    <value>Stop Time</value>
  </data>
  <data name="TotalCostPercentageComplete" xml:space="preserve">
    <value>Total Cost Percentage Complete</value>
  </data>
  <data name="PiecesSalesAmt" xml:space="preserve">
    <value>Pieces/Sales/Amt</value>
  </data>
  <data name="LaborBurdenAmount" xml:space="preserve">
    <value>Labor Burden Amount</value>
  </data>
  <data name="AccrualBasis" xml:space="preserve">
    <value>Accrual-Basis</value>
  </data>
  <data name="InsertOptionalFields" xml:space="preserve">
    <value>Insert Optional Fields</value>
  </data>
  <data name="ARItemUOM" xml:space="preserve">
    <value>A/R Item UOM</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
</root>