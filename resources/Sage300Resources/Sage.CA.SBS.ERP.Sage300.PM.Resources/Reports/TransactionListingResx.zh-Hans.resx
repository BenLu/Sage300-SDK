<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentNumber" xml:space="preserve">
    <value>调整编号</value>
  </data>
  <data name="AdjustmentsNumber" xml:space="preserve">
    <value>调整编号</value>
    <comment>Type name</comment>
  </data>
  <data name="ChargeNumber" xml:space="preserve">
    <value>收费号</value>
  </data>
  <data name="ChargesNumber" xml:space="preserve">
    <value>收费编号</value>
    <comment>Type name</comment>
  </data>
  <data name="ChkIncludeComments" xml:space="preserve">
    <value>备注</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkIncludeTaxDetails" xml:space="preserve">
    <value>税务明细</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkOptionalFields" xml:space="preserve">
    <value>可选字段</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkReprintPreviouslyPrint" xml:space="preserve">
    <value>重新打印已打印的交易</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkSerialLot" xml:space="preserve">
    <value>系列/批别</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkStatusApproved" xml:space="preserve">
    <value>已核准</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkStatusEntered" xml:space="preserve">
    <value>输入</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkStatusPosted" xml:space="preserve">
    <value>已过帐</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkStatusReady" xml:space="preserve">
    <value>待核准</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkTypeEntered" xml:space="preserve">
    <value>输入</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkTypeGenerated" xml:space="preserve">
    <value>生成</value>
    <comment>Check Box</comment>
  </data>
  <data name="ChkTypeImported" xml:space="preserve">
    <value>导入</value>
    <comment>Check Box</comment>
  </data>
  <data name="CostEntriesNumber" xml:space="preserve">
    <value>成本编号:</value>
    <comment>Type name</comment>
  </data>
  <data name="CostNumber" xml:space="preserve">
    <value>成本编号</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>项目成本管理/交易列表报表</value>
  </data>
  <data name="EquipmentUsageNumber" xml:space="preserve">
    <value>设备使用编号</value>
    <comment>Type name</comment>
  </data>
  <data name="FromNumber" xml:space="preserve">
    <value>从编号</value>
  </data>
  <data name="FromTransactionDate" xml:space="preserve">
    <value>到日期</value>
  </data>
  <data name="MaterialAllocationNumber" xml:space="preserve">
    <value>物料分配编号</value>
    <comment>Type name</comment>
  </data>
  <data name="MaterialReturnNumber" xml:space="preserve">
    <value>物料退回编号</value>
  </data>
  <data name="MaterialReturnsNumber" xml:space="preserve">
    <value>物料退回编号</value>
    <comment>Type name</comment>
  </data>
  <data name="MaterialUsageNumber" xml:space="preserve">
    <value>物料使用编号</value>
    <comment>Type name</comment>
  </data>
  <data name="OptAdjustments" xml:space="preserve">
    <value>调整</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptCharges" xml:space="preserve">
    <value>收费</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptCostEntries" xml:space="preserve">
    <value>成本</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptEquipmentUsage" xml:space="preserve">
    <value>设备使用</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptMaterialAllocation" xml:space="preserve">
    <value>物料分配</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptMaterialReturns" xml:space="preserve">
    <value>物料退回</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptMaterialUsage" xml:space="preserve">
    <value>物料使用</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptReviseEstimates" xml:space="preserve">
    <value>修订估算</value>
    <comment>Radio button</comment>
  </data>
  <data name="OptTimecards" xml:space="preserve">
    <value>工时卡</value>
    <comment>Radio button</comment>
  </data>
  <data name="ReviseEstimateNumber" xml:space="preserve">
    <value>修订估算编号</value>
  </data>
  <data name="ReviseEstimatesNumber" xml:space="preserve">
    <value>修订估算编号</value>
    <comment>Type name</comment>
  </data>
  <data name="SelectOneStatus" xml:space="preserve">
    <value>您必须选择至少一个交易状态。</value>
  </data>
  <data name="SelectOneType" xml:space="preserve">
    <value>您必须选择至少一个交易类型。</value>
  </data>
  <data name="TimecardNumber" xml:space="preserve">
    <value>工时卡编号</value>
  </data>
  <data name="TimecardsNumber" xml:space="preserve">
    <value>工时卡编号</value>
    <comment>Type name</comment>
  </data>
  <data name="ToNumber" xml:space="preserve">
    <value>到编号</value>
  </data>
  <data name="ToTransactionDate" xml:space="preserve">
    <value>销货单</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>交易日期</value>
  </data>
  <data name="TransactionType" xml:space="preserve">
    <value>交易类型</value>
  </data>
</root>