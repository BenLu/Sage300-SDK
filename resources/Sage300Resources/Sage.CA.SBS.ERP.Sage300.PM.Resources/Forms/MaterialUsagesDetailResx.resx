<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TOTCOSTSR" xml:space="preserve">
    <value>Total Cost</value>
  </data>
  <data name="CONTRACT" xml:space="preserve">
    <value>Contract</value>
  </data>
  <data name="TaxIncluded1" xml:space="preserve">
    <value>Tax Included 1</value>
  </data>
  <data name="BillAmountBasedOn" xml:space="preserve">
    <value>Bill Amount Based On</value>
  </data>
  <data name="OverheadPercentage" xml:space="preserve">
    <value>Overhead Percentage</value>
  </data>
  <data name="ForcePopupSN" xml:space="preserve">
    <value>Force popup SN</value>
  </data>
  <data name="Billable" xml:space="preserve">
    <value>Billable</value>
  </data>
  <data name="Lot" xml:space="preserve">
    <value>Lot</value>
  </data>
  <data name="CustomerCurrency" xml:space="preserve">
    <value>Customer Currency</value>
  </data>
  <data name="TimeAndMaterials" xml:space="preserve">
    <value>Time and Materials</value>
  </data>
  <data name="TaxIncluded5" xml:space="preserve">
    <value>Tax Included 5</value>
  </data>
  <data name="Nonbillable" xml:space="preserve">
    <value>Non-billable</value>
  </data>
  <data name="CostPlus" xml:space="preserve">
    <value>Cost Plus</value>
  </data>
  <data name="MovingAverage" xml:space="preserve">
    <value>Moving Average</value>
  </data>
  <data name="ItemUnitOfMeasure" xml:space="preserve">
    <value>Item Unit of Measure</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="SNInterCommunicationID" xml:space="preserve">
    <value>SN inter-communication ID</value>
  </data>
  <data name="AdditionalCost" xml:space="preserve">
    <value>Additional Cost</value>
  </data>
  <data name="ARItemNumber" xml:space="preserve">
    <value>A/R Item Number</value>
  </data>
  <data name="ClearLots" xml:space="preserve">
    <value>Clear Lots</value>
  </data>
  <data name="ExtendedCostHome" xml:space="preserve">
    <value>Extended Cost</value>
  </data>
  <data name="LineNumber" xml:space="preserve">
    <value>Line Number</value>
  </data>
  <data name="OHDESC" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="PriceList" xml:space="preserve">
    <value>Price List</value>
  </data>
  <data name="ExtendedCost" xml:space="preserve">
    <value>Extended Cost</value>
  </data>
  <data name="TaxIncluded3" xml:space="preserve">
    <value>Tax Included 3</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="LaborHoursPercentageComplete" xml:space="preserve">
    <value>Labor Hours Percentage Complete</value>
  </data>
  <data name="AccrualBasis" xml:space="preserve">
    <value>Accrual-Basis</value>
  </data>
  <data name="InvoiceType" xml:space="preserve">
    <value>Invoice Type</value>
  </data>
  <data name="WorkInProgressAccountDescription" xml:space="preserve">
    <value>Work In Progress Account Description</value>
  </data>
  <data name="OHHM" xml:space="preserve">
    <value>Overhead Amount</value>
  </data>
  <data name="AutoGenerateSerials" xml:space="preserve">
    <value>Auto-generate Serials</value>
  </data>
  <data name="ExtendedBillingAmount" xml:space="preserve">
    <value>Extended Billing Amount</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="FormattedContractNumber" xml:space="preserve">
    <value>Contract</value>
  </data>
  <data name="BillingRate" xml:space="preserve">
    <value>Billing Rate</value>
  </data>
  <data name="TaxAuthority3" xml:space="preserve">
    <value>Tax Authority 3</value>
  </data>
  <data name="TaxAuthority2" xml:space="preserve">
    <value>Tax Authority 2</value>
  </data>
  <data name="TaxAuthority1" xml:space="preserve">
    <value>Tax Authority 1</value>
  </data>
  <data name="GenerateICSequence" xml:space="preserve">
    <value>Generate IC Seq.</value>
  </data>
  <data name="TaxAuthority5" xml:space="preserve">
    <value>Tax Authority 5</value>
  </data>
  <data name="TaxAuthority4" xml:space="preserve">
    <value>Tax Authority 4</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="TOTCOSTHM" xml:space="preserve">
    <value>Total Cost</value>
  </data>
  <data name="CategoryDescription" xml:space="preserve">
    <value>Category Description</value>
  </data>
  <data name="CostCurrency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="MaterialUsageNumber" xml:space="preserve">
    <value>Material Usage Number</value>
  </data>
  <data name="CloseSN" xml:space="preserve">
    <value>Close SN</value>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>Unit of Measure</value>
  </data>
  <data name="UnitCost" xml:space="preserve">
    <value>Unit Cost</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ProjectDescription" xml:space="preserve">
    <value>Project Description</value>
  </data>
  <data name="Auto_AllocateLots" xml:space="preserve">
    <value>Auto_Allocate Lots</value>
  </data>
  <data name="LocationDescription" xml:space="preserve">
    <value>Location Description</value>
  </data>
  <data name="NumberOfLotsToGenerate" xml:space="preserve">
    <value>Number of Lots to Generate</value>
  </data>
  <data name="ForcePopupLT" xml:space="preserve">
    <value>Force popup LT</value>
  </data>
  <data name="SeperateQuantities" xml:space="preserve">
    <value>Seperate Quantities</value>
  </data>
  <data name="AutoGenerateLots" xml:space="preserve">
    <value>Auto-generate Lots</value>
  </data>
  <data name="CloseLT" xml:space="preserve">
    <value>Close LT</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Item Description</value>
  </data>
  <data name="QuantityPerLot" xml:space="preserve">
    <value>Quantity per Lot</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ARUnitOfMeasure" xml:space="preserve">
    <value>A/R Unit of Measure</value>
  </data>
  <data name="InvoiceThisAmount" xml:space="preserve">
    <value>Invoice This Amount</value>
  </data>
  <data name="ContractDescription" xml:space="preserve">
    <value>Contract Description</value>
  </data>
  <data name="MostRecentCost" xml:space="preserve">
    <value>Most Recent Cost</value>
  </data>
  <data name="NumberOfLots" xml:space="preserve">
    <value>Number of Lots</value>
  </data>
  <data name="BillingType" xml:space="preserve">
    <value>Billing Type</value>
  </data>
  <data name="InvoiceBasedOnExchangeRate" xml:space="preserve">
    <value>Invoice Based on Exchange Rate</value>
  </data>
  <data name="TaxIncluded4" xml:space="preserve">
    <value>Tax Included 4</value>
  </data>
  <data name="NumberOfSerials" xml:space="preserve">
    <value>Number of Serials</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="OverheadType" xml:space="preserve">
    <value>Overhead Type</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="LIFO" xml:space="preserve">
    <value>LIFO</value>
  </data>
  <data name="Serial" xml:space="preserve">
    <value>Serial</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ProjectPercentageComplete" xml:space="preserve">
    <value>Project Percentage Complete</value>
  </data>
  <data name="FIFO" xml:space="preserve">
    <value>FIFO</value>
  </data>
  <data name="RevenueAndCostCurrency" xml:space="preserve">
    <value>Revenue And Cost Currency</value>
  </data>
  <data name="OverheadRate" xml:space="preserve">
    <value>Overhead Rate</value>
  </data>
  <data name="AssetDescription" xml:space="preserve">
    <value>Asset Description</value>
  </data>
  <data name="CostMethod" xml:space="preserve">
    <value>Cost Method</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>PM MaterialUsagesDetail</value>
  </data>
  <data name="AccountingMethod" xml:space="preserve">
    <value>Accounting Method</value>
  </data>
  <data name="Basic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="ClearSerials" xml:space="preserve">
    <value>Clear Serials</value>
  </data>
  <data name="NoCharge" xml:space="preserve">
    <value>No Charge</value>
  </data>
  <data name="UsedBy" xml:space="preserve">
    <value>Used By</value>
  </data>
  <data name="CheckBelowZero" xml:space="preserve">
    <value>Check Below Zero</value>
  </data>
  <data name="PopupSN" xml:space="preserve">
    <value>Popup SN</value>
  </data>
  <data name="ProjectType" xml:space="preserve">
    <value>Project Type</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="TaxIncluded2" xml:space="preserve">
    <value>Tax Included 2</value>
  </data>
  <data name="AllocateSerialFrom" xml:space="preserve">
    <value>Allocate serial from</value>
  </data>
  <data name="SerialLotQuantityToProcess" xml:space="preserve">
    <value>Serial/Lot Quantity to process</value>
  </data>
  <data name="ARItemDescription" xml:space="preserve">
    <value>A/R Item Description</value>
  </data>
  <data name="RevenueAndCostsInCustomerCurrency" xml:space="preserve">
    <value>Revenue and Costs in Customer Currency</value>
  </data>
  <data name="ICAccountDescription" xml:space="preserve">
    <value>I/C Account Description</value>
  </data>
  <data name="ICAccount" xml:space="preserve">
    <value>I/C Account</value>
  </data>
  <data name="BillingCurrency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="MeterHandle" xml:space="preserve">
    <value>Meter handle</value>
  </data>
  <data name="VALUES" xml:space="preserve">
    <value>Optional Fields</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="OHSR" xml:space="preserve">
    <value>Overhead Amount</value>
  </data>
  <data name="AllocateLotFrom" xml:space="preserve">
    <value>Allocate lot from</value>
  </data>
  <data name="TaxClass5" xml:space="preserve">
    <value>Tax Class 5</value>
  </data>
  <data name="TaxClass4" xml:space="preserve">
    <value>Tax Class 4</value>
  </data>
  <data name="AssetQuantity" xml:space="preserve">
    <value>Asset Quantity</value>
  </data>
  <data name="TaxClass1" xml:space="preserve">
    <value>Tax Class 1</value>
  </data>
  <data name="TaxClass3" xml:space="preserve">
    <value>Tax Class 3</value>
  </data>
  <data name="TaxClass2" xml:space="preserve">
    <value>Tax Class 2</value>
  </data>
  <data name="StandardCost" xml:space="preserve">
    <value>Standard Cost</value>
  </data>
  <data name="BillingsAndCosts" xml:space="preserve">
    <value>Billings and Costs</value>
  </data>
  <data name="Conversion" xml:space="preserve">
    <value>Conversion</value>
  </data>
  <data name="HASOPT" xml:space="preserve">
    <value>Optional Fields</value>
  </data>
  <data name="OverheadAccount" xml:space="preserve">
    <value>Overhead Account</value>
  </data>
  <data name="DetailNumber" xml:space="preserve">
    <value>Detail Number</value>
  </data>
  <data name="CategoryPercentageComplete" xml:space="preserve">
    <value>Category Percentage Complete</value>
  </data>
  <data name="ProcessCommand" xml:space="preserve">
    <value>Process Command</value>
  </data>
  <data name="StockItem" xml:space="preserve">
    <value>Stock Item</value>
  </data>
  <data name="FASAttached" xml:space="preserve">
    <value>FAS Attached</value>
  </data>
  <data name="LTInterCommunicationID" xml:space="preserve">
    <value>LT inter-communication ID</value>
  </data>
  <data name="CompletedProject" xml:space="preserve">
    <value>Completed Project</value>
  </data>
  <data name="LoadOptionalFields" xml:space="preserve">
    <value>Load Optional Fields</value>
  </data>
  <data name="FixedPrice" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="RevenueAndCostsInFunctionalCurrency" xml:space="preserve">
    <value>Revenue and Costs in Functional Currency</value>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>Item Number</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ContractStyle" xml:space="preserve">
    <value>Contract Style</value>
  </data>
  <data name="Userspecified" xml:space="preserve">
    <value>User-specified</value>
  </data>
  <data name="Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="PopupLT" xml:space="preserve">
    <value>Popup LT</value>
  </data>
  <data name="RevenueInCustomerCurrency" xml:space="preserve">
    <value>Revenue in Customer Currency</value>
  </data>
  <data name="AutoAllocateSerials" xml:space="preserve">
    <value>Auto-Allocate Serials</value>
  </data>
  <data name="InternalUsage" xml:space="preserve">
    <value>Internal Usage</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Function" xml:space="preserve">
    <value>Function</value>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="TotalCostPercentageComplete" xml:space="preserve">
    <value>Total Cost Percentage Complete</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="WorkInProgressAccount" xml:space="preserve">
    <value>Work in Progress Account</value>
  </data>
  <data name="UNFMTITEM" xml:space="preserve">
    <value>Item Number</value>
  </data>
</root>