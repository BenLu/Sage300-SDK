<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllocatedPercentage" xml:space="preserve">
    <value>Porcentaje Asignado</value>
  </data>
  <data name="AllocatedQuantity" xml:space="preserve">
    <value>Cantidad Asignada</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Aprobado</value>
  </data>
  <data name="ApprovedAt" xml:space="preserve">
    <value>Aprobado en</value>
  </data>
  <data name="ApprovedBy" xml:space="preserve">
    <value>Aprobado por</value>
  </data>
  <data name="ApprovedOn" xml:space="preserve">
    <value>Aprobado el</value>
  </data>
  <data name="BillingCurrency" xml:space="preserve">
    <value>Moneda de Facturación</value>
  </data>
  <data name="BillingRate" xml:space="preserve">
    <value>Tasa de Facturación</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categoría</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comentarios</value>
  </data>
  <data name="CommentsTitle" xml:space="preserve">
    <value>Comentarios</value>
  </data>
  <data name="CreatedAt" xml:space="preserve">
    <value>Creado en</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Creado por</value>
  </data>
  <data name="CreatedOn" xml:space="preserve">
    <value>Creado el</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="DetailOptionalFields" xml:space="preserve">
    <value>Campos Opcionales</value>
  </data>
  <data name="EditDetails" xml:space="preserve">
    <value>Editar Detalles</value>
  </data>
  <data name="Entered" xml:space="preserve">
    <value>Ingresado</value>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Ingresado por</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>PJC - Asignación de Materiales</value>
  </data>
  <data name="ExtendedAllocatedCost" xml:space="preserve">
    <value>Costo Asignado Total</value>
  </data>
  <data name="ExtendedBillingAmount" xml:space="preserve">
    <value>Monto de Facturación Total</value>
  </data>
  <data name="ExtendedStoredCost" xml:space="preserve">
    <value>Costo Almacenado Total</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>Falso</value>
  </data>
  <data name="FiscalPeriod" xml:space="preserve">
    <value>Período Fiscal</value>
  </data>
  <data name="FiscalYear" xml:space="preserve">
    <value>Ejercicio</value>
  </data>
  <data name="Function" xml:space="preserve">
    <value>Función</value>
  </data>
  <data name="HeaderOptFieldTitle" xml:space="preserve">
    <value>Campos Opcionales</value>
  </data>
  <data name="InvalidQuantity" xml:space="preserve">
    <value>La cantidad asignada excede la cantidad almacenada</value>
  </data>
  <data name="LineNumber" xml:space="preserve">
    <value>Número de Línea</value>
  </data>
  <data name="LoadOptionalFields" xml:space="preserve">
    <value>Cargar Campos Opcionales</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Ubicación</value>
  </data>
  <data name="LocationDescription" xml:space="preserve">
    <value>Descripción de Ubicación</value>
  </data>
  <data name="MaterialAllocationDetails" xml:space="preserve">
    <value>Detalles de Asignación de Materiales</value>
  </data>
  <data name="MaterialAllocationNumber" xml:space="preserve">
    <value>Número de Asignación de Materiales</value>
  </data>
  <data name="Meter" xml:space="preserve">
    <value>Medidor</value>
  </data>
  <data name="MeterButNoCancelButton" xml:space="preserve">
    <value>Medidor pero sin botón cancelar</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nuevo</value>
  </data>
  <data name="NextDetailNumber" xml:space="preserve">
    <value>Número de Detalle Siguiente</value>
  </data>
  <data name="NoMeter" xml:space="preserve">
    <value>Sin medidor</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="Num1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Num10" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="Num11" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="Num12" xml:space="preserve">
    <value>12</value>
  </data>
  <data name="Num13" xml:space="preserve">
    <value>13</value>
  </data>
  <data name="Num2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Num3" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Num4" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="Num5" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Num6" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="Num7" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="Num8" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="Num9" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="NumberOfDetails" xml:space="preserve">
    <value>Cantidad de Detalles</value>
  </data>
  <data name="NumberOfOptionalFields" xml:space="preserve">
    <value>Campos Opcionales</value>
  </data>
  <data name="OptionalFields" xml:space="preserve">
    <value>Campos Opcionales</value>
  </data>
  <data name="OverheadAllocated" xml:space="preserve">
    <value>Gastos Generales Asignados</value>
  </data>
  <data name="PeriodLocked" xml:space="preserve">
    <value>La fecha {0} corresponde al período {1} en el año fiscal {2}, el cual está bloqueado para Cálculo de Costos de Proyectos y Trabajos en el Calendario Fiscal de Servicios Comunes.</value>
  </data>
  <data name="Posted" xml:space="preserve">
    <value>Asentado</value>
  </data>
  <data name="PostedAt" xml:space="preserve">
    <value>Asentado en</value>
  </data>
  <data name="PostedBy" xml:space="preserve">
    <value>Asentado por</value>
  </data>
  <data name="PostedOn" xml:space="preserve">
    <value>Asentado el</value>
  </data>
  <data name="PostingDate" xml:space="preserve">
    <value>Fecha de Asentamiento</value>
  </data>
  <data name="PostingDateOverrideTitle" xml:space="preserve">
    <value>Sustitución de Fecha de Asentamiento</value>
  </data>
  <data name="PrintStatus" xml:space="preserve">
    <value>Estado de Impresión</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Proyecto</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Referencia</value>
  </data>
  <data name="Resource" xml:space="preserve">
    <value>Número de Artículo</value>
  </data>
  <data name="Sequence" xml:space="preserve">
    <value>Secuencia</value>
  </data>
  <data name="ShowProgressBarDuringPosting" xml:space="preserve">
    <value>Mostrar barra de progreso durante el asentamiento</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="StoredOverhead" xml:space="preserve">
    <value>Gastos Generales Almacenados</value>
  </data>
  <data name="StoredQuantity" xml:space="preserve">
    <value>Cantidad Almacenada</value>
  </data>
  <data name="STRDUOM" xml:space="preserve">
    <value>Unidad de Medida Almacenada</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>Fecha de Transacción</value>
  </data>
  <data name="TransactionStatus" xml:space="preserve">
    <value>Estado de Transacción</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>Verdadero</value>
  </data>
  <data name="UnitCost" xml:space="preserve">
    <value>Costo Unitario</value>
  </data>
  <data name="UOM" xml:space="preserve">
    <value>Unidad de Medida Asignada</value>
  </data>
  <data name="ViewDetails" xml:space="preserve">
    <value>Ver Detalles</value>
  </data>
</root>