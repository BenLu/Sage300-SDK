<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Confirm" xml:space="preserve">
    <value>确认电邮</value>
  </data>
  <data name="ConfirmCountry" xml:space="preserve">
    <value>连接付款承兑后，您无法更改您公司的国家/地区。是否将{0}作为国家/地区连接？</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>连接</value>
  </data>
  <data name="ConnectionErrorMessage1" xml:space="preserve">
    <value>您也可以尝试通过请求一个唯一代码来重新建立连接。点击确定，一个代码将被发送到您存档的电邮地址。</value>
    <comment>Sage Payment Connection Error Message</comment>
  </data>
  <data name="ConnectionErrorMessage2" xml:space="preserve">
    <value>要更改您的Sage付款承兑的电邮地址，请联系客户支持。</value>
    <comment>Sage Payment Connection Error Message</comment>
  </data>
  <data name="ConnectionWarningTitle" xml:space="preserve">
    <value>警告：发票付款遇到错误。请稍后再试。</value>
    <comment>Sage Payment Connection Error Message</comment>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>发票付款需要一个电邮地址。我们可能需要不时与您联系。</value>
  </data>
  <data name="ConvienantEmails" xml:space="preserve">
    <value>注册后，您的客户将在您发送给他们的发票电邮中看到&lt;立即付款&gt;按钮。这使他们可以方便轻松地快速支付发票。</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>国家或地区</value>
  </data>
  <data name="CountryTooltip" xml:space="preserve">
    <value>选择一个使用贵公司的功能币种的国家或地区。</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>在发票上添加&lt;立即付款&gt;按钮，并通过诸如PayPal和Stripe等提供商接受付款。涉及第三方费用。</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>电邮</value>
  </data>
  <data name="EmailNotValid" xml:space="preserve">
    <value>此电邮无效。</value>
  </data>
  <data name="EmailsBlank" xml:space="preserve">
    <value>此电邮不能空置。</value>
  </data>
  <data name="EmailsNotSame" xml:space="preserve">
    <value>电邮不相同</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>付款承兑</value>
  </data>
  <data name="GetPaidFaster" xml:space="preserve">
    <value>通过安全的付款服务提供商接受客户的在线付款，用发票付款更快地获得付款。</value>
  </data>
  <data name="Header" xml:space="preserve">
    <value>卡和钱包支付</value>
  </data>
  <data name="InvalidCountry" xml:space="preserve">
    <value>选择一个国家或地区。</value>
  </data>
  <data name="PaymentsAcceptanceAllCaps" xml:space="preserve">
    <value>付款承兑</value>
  </data>
  <data name="Secure" xml:space="preserve">
    <value>安全连接</value>
  </data>
  <data name="SendNewCode" xml:space="preserve">
    <value>发送另一个代码</value>
    <comment>Sage PaymentReauthentication Content</comment>
  </data>
  <data name="ServiceFabricDescription" xml:space="preserve">
    <value>通过认可的应用程序和服务来扩展Sage 300C订用的能力。</value>
  </data>
  <data name="Signup" xml:space="preserve">
    <value>注册</value>
  </data>
  <data name="SignupDetails" xml:space="preserve">
    <value>此电邮地址用于您的发票付款帐户。您可能会收到有关您帐户的电邮。</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>欢迎</value>
  </data>
  <data name="WelcomeScreenTitle" xml:space="preserve">
    <value>Sage发票付款</value>
  </data>
</root>