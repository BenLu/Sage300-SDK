<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PaymentCurrency" xml:space="preserve">
    <value>Payment Currency</value>
  </data>
  <data name="CheckPDFUploadStatus" xml:space="preserve">
    <value>Check PDF Upload Status</value>
  </data>
  <data name="TotalGross" xml:space="preserve">
    <value>Total Gross</value>
  </data>
  <data name="EmployeeLastName" xml:space="preserve">
    <value>Employee Last Name</value>
  </data>
  <data name="EmployeeMiddleName" xml:space="preserve">
    <value>Employee MIddle Name</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="TotalNonCashBenefitsYTD" xml:space="preserve">
    <value>Total Non-cash Benefits YTD</value>
  </data>
  <data name="PayFrequency" xml:space="preserve">
    <value>Pay Frequency</value>
  </data>
  <data name="EmployeeAddress2" xml:space="preserve">
    <value>Employee Address 2</value>
  </data>
  <data name="Entity" xml:space="preserve">
    <value>CS Payslip</value>
  </data>
  <data name="Publishing" xml:space="preserve">
    <value>Publishing</value>
  </data>
  <data name="SSNSIN" xml:space="preserve">
    <value>SSN/SIN</value>
  </data>
  <data name="TotalTaxesYTD" xml:space="preserve">
    <value>Total Taxes YTD</value>
  </data>
  <data name="TotalDeductionsYTD" xml:space="preserve">
    <value>Total Deductions YTD</value>
  </data>
  <data name="PeriodStartDate" xml:space="preserve">
    <value>Period Start Date</value>
  </data>
  <data name="PeriodEndDate" xml:space="preserve">
    <value>Period End Date</value>
  </data>
  <data name="EmployeeFirstName" xml:space="preserve">
    <value>Employee First Name</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="TotalNonCashBenefits" xml:space="preserve">
    <value>Total Non-cash Benefits</value>
  </data>
  <data name="EmployeeAddress3" xml:space="preserve">
    <value>Employee Address 3</value>
  </data>
  <data name="PayslipUploadStatus" xml:space="preserve">
    <value>Payslip Upload Status</value>
  </data>
  <data name="CheckNumber" xml:space="preserve">
    <value>Check Number</value>
  </data>
  <data name="OriginalModule" xml:space="preserve">
    <value>Original Module</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="NotPublished" xml:space="preserve">
    <value>Not Published</value>
  </data>
  <data name="CheckPDFFilePath" xml:space="preserve">
    <value>Check PDF File Path</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="Semimonthly" xml:space="preserve">
    <value>Semimonthly</value>
  </data>
  <data name="Monthly" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="OnCheckDate" xml:space="preserve">
    <value>On Check Date</value>
  </data>
  <data name="EmployeeAddress4" xml:space="preserve">
    <value>Employee Address 4</value>
  </data>
  <data name="SageHRPayslipID" xml:space="preserve">
    <value>Sage HR Payslip ID</value>
  </data>
  <data name="TotalGrossYTD" xml:space="preserve">
    <value>Total Gross YTD</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="NetPayYTD" xml:space="preserve">
    <value>Net Pay YTD</value>
  </data>
  <data name="ZipPostalCode" xml:space="preserve">
    <value>Zip/Postal Code</value>
  </data>
  <data name="Immediately" xml:space="preserve">
    <value>Immediately</value>
  </data>
  <data name="PublishSetting" xml:space="preserve">
    <value>Publish Setting</value>
  </data>
  <data name="TotalCashBenefitsYTD" xml:space="preserve">
    <value>Total Cash Benefits YTD</value>
  </data>
  <data name="EmployeeAddress1" xml:space="preserve">
    <value>Employee Address 1</value>
  </data>
  <data name="TotalDeductions" xml:space="preserve">
    <value>Total Deductions</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="TenPerYear" xml:space="preserve">
    <value>Ten per Year</value>
  </data>
  <data name="NetPay" xml:space="preserve">
    <value>Net Pay</value>
  </data>
  <data name="TotalCashBenefits" xml:space="preserve">
    <value>Total Cash Benefits</value>
  </data>
  <data name="PaymentDate" xml:space="preserve">
    <value>Payment Date</value>
  </data>
  <data name="Quarterly" xml:space="preserve">
    <value>Quarterly</value>
  </data>
  <data name="Published" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="ProcessDate" xml:space="preserve">
    <value>Process Date</value>
  </data>
  <data name="TotalTaxes" xml:space="preserve">
    <value>Total Taxes</value>
  </data>
  <data name="TotalHours" xml:space="preserve">
    <value>Total Hours</value>
  </data>
  <data name="Biweekly" xml:space="preserve">
    <value>Biweekly</value>
  </data>
  <data name="SelectedForPublishing" xml:space="preserve">
    <value>Selected for Publishing</value>
  </data>
  <data name="RecordNumber" xml:space="preserve">
    <value>Record Number</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="TwentyTwoPerYear" xml:space="preserve">
    <value>Twenty-two per Year</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="EmployeeFullName" xml:space="preserve">
    <value>Employee Full Name</value>
  </data>
  <data name="Daily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="ThirteenPerYear" xml:space="preserve">
    <value>Thirteen per Year</value>
  </data>
  <data name="Weekly" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="Payslip" xml:space="preserve">
    <value>Payslip(s)</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="GrossPay" xml:space="preserve">
    <value>Gross Pay</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PayslipAvailability" xml:space="preserve">
    <value>Payslip Availability</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
</root>